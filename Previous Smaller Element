/*
Given an array a of integers of length n, find the nearest smaller number for every element such that the smaller element is on left side.
If no small element present on the left print -1.

Example 1:
Input: n = 3
a = {1, 6, 2}
Output: -1 1 1
Explaination: There is no number at the 
left of 1. Smaller number than 6 and 2 is 1.

TC - O(N)
SC - O(N)
*/

class Solution{
public:
    vector<int> leftSmaller(int n, int a[]){
        
        stack<int> s;
        s.push(-1);
        vector<int> ans(n);
        
        for(int i=0; i<n; i++){
            int current = a[i];
            
            // if s.top() is greater than current element
            while(s.top() >= current){
                s.pop();
            }
            
            // got smaller element than current element
            ans[i] = s.top();
            
            // pushing that a[i] element in stack to get smaller element for next element
            s.push(current);
        }
        
        return ans;
        
    }
};
